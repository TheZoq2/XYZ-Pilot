NOP

NULL = 0000000000000000
MANYF = FFFFFFFFFFFFFFFF

#AND with a vector to remove all but the last element
LAST_VEC_ELEMENT = FFFF

ARRAYSTART = 0000000000000100
ARRAYEND = 0000000000000100
ARRAYSIZE = 0 

SHIPPOS = 00f000f000000000
SHIPVEL = 0000000000000000
SHIPACC = 0000000000000000
VECADDRIGHT = 0001000000000000
VECADDDOWN = 0000000100000000 
MAXSPEED = 3
VECROTRIGHT = 000000000000000

FORWARD_ACCEL = 3


SHIPROT = 0000000000000000

SHIP_ANGLE = 0000000000000000
TURN_SPEED = 0000000000050000

SLOW_TURN_ADD = 0002000000020000
SLOW_TURN = 0000000000000000

COUNTER = 0
COUNTMAX = 2


#Modify the model memory
ASTEROID_START = 7A
LOAD 0 ASTEROID_START
STOREOBJ 0 7

ITER:
  LOAD 0 SHIPPOS
  LOAD 1 SHIPVEL
  LOAD 3 VECADDRIGHT
  LOAD 4 VECADDDOWN
  LOAD 6 VECROTRIGHT

  LOAD 7 SHIP_ANGLE
  LOAD 8 TURN_SPEED


  TESTLEFT:
    BTST F 5
    BEQ GOLEFT
  TESTDOWN:
    BTST F 4
    BEQ GODOWN
  TESTUP:
    BTST F 6
    BEQ GOUP
  TESTRIGHT:
    BTST F 3
    BEQ GORIGHT
  
  TEST_TURN_LEFT:
    BTST F 0
    BEQ TURN_LEFT
  TEST_TURN_RIGHT:
    BTST F 1
    BEQ TURN_RIGHT
  

  MOVED:

  #Update ship position and angle
  #Add the velocity of the ship
  ADD 0 0 1
  STOREOBJ 0 0

  #Divide the actual position to get the visual position
  LOAD C LAST_VEC_ELEMENT
  LOAD 8 NULL
  ALIAS 8 FINAL_POS

  #Shift 48 bits
  LSRI 9 SHIPPOS 30
  AND 9 9 LAST_VEC_ELEMENT
  #Divide speed by 4
  LSRI 9 9 3
  #Shift back 48 bits
  LSLI 9 9 30 
  ADD FINAL_POS FINAL_POS 9

  #Shift 32 bits
  LSRI 9 SHIPPOS 20
  AND 9 9 LAST_VEC_ELEMENT
  #Divide speed by 4
  LSRI 9 9 3
  #Shift back 32 bits
  LSLI 9 9 20 
  ADD FINAL_POS FINAL_POS 9

  #Update the visual position
  STOREOBJ FINAL_POS 0

  #Rotate the ship
  ADD 3 7 3
  STOREOBJ 3 1

  STORE 0 SHIPPOS
  STORE 1 SHIPVEL
  STORE 7 SHIP_ANGLE

  #Spin the asteroid
  LOAD 2 SLOW_TURN_ADD
  LOAD 5 SLOW_TURN

  VECADD 5 5 2
  #LSLI 5 5 1
  STOREOBJ 5 5

  STORE 5 SLOW_TURN

  WAITFRAME
  WAITFRAME

  BRA ITER


COUNTUP:
  ADDI 9 9 1
  STORE 9 COUNTER
  BRA TEST_TURN_LEFT  

#Movement 'subroutines'
GORIGHT:
  ADD 1 1 3
  BRA TEST_TURN_LEFT
GOLEFT:
  SUB 1 1 3
  BRA TESTDOWN
GODOWN:
  ADD 1 1 4
  BRA TESTUP
GOUP:
  LOAD B SHIP_ANGLE
  LOAD C FORWARD_ACCEL
  LOAD A NULL
  LOAD E LAST_VEC_ELEMENT
  #ALIAS A FINAL_VEC
  TEST_ELEMENT = 0000ffff00000000
  LOAD F TEST_ELEMENT

  LSRI SHIP_ANGLE SHIP_ANGLE 10

  #X add
  MULCOS 8 SHIP_ANGLE FORWARD_ACCEL
  LSLI 8 8 20
  AND 8 8 TEST_ELEMENT
  ADD A A 8
  
  #Y add
  #ADDI SHIP_ANGLE SHIP_ANGLE 
  #LOAD F TEST_ELEMENT
  #MULCOS 8 SHIP_ANGLE FORWARD_ACCEL
  #LSLI 8 8 20
  #AND 8 8 TEST_ELEMENT
  #ADD A A 8

  VECADD 1 1 A
  BRA TESTRIGHT
TURN_LEFT:
  ADD 7 7 8
  BRA TEST_TURN_RIGHT
TURN_RIGHT:
  SUB 7 7 8
  BRA MOVED

